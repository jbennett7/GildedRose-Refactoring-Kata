let s:env = "ssh ubuntu@ubuntu -C 'cd GildedRose-Refactoring-Kata/C;"
let mapleader="-"
set number
set expandtab
set shiftwidth=4
inoremap jk <esc>
if has("gui_running")
    inoremap <esc> <nop>
endif

"nnoremap <leader>ga :execute '!git add ' . expand("%")<cr>
nnoremap <leader>ga :echo system('git add ' . expand("%"))<cr>
nnoremap <leader>gs :echo system('git status')<cr>
nnoremap <leader>gc :echo system('git commit -m changes')<cr>
nnoremap <leader>gp :echo system('git push origin master')<cr>

function ListFiles()
  let l:cmd = "ls"
  echo system(l:cmd)
endfunction
command! -nargs=0 -complete=command Ls call ListFiles()

function Pwd()
  let l:cmd = "pwd"
  echo system(l:cmd)
endfunction
command! -nargs=0 -complete=command Pwd call Pwd()

function Update()
  let l:cmd = s:env . "git pull origin master" . "'"
  echo system(l:cmd)
endfunction
command! -nargs=0 -complete=command Update call Update()

function UpdateAll(msg)
  if empty(a:msg)
    let l:msg = "changes"
  else
    let l:msg = a:msg
  endif
  echo system("git add " . expand("%"))
  echo system("git commit -m" . l:msg)
  echo system("git push origin master")
  call Update()
endfunction
command! -nargs=* -complete=command UpdateAll call UpdateAll(<q-args>)

function RunTest()
  let l:cmd = s:env . "make clean;./run-once.sh"
  echo system(l:cmd . "'")
endfunction
command! -nargs=0 -complete=command RunTest call RunTest()
